pipeline {
  agent none
  stages {
    stage('Back-end') {
      agent {
        docker { image 'maven:3.8.1-adoptopenjdk-11' }
      }
      steps {
        sh 'mvn --version'
      }
    }
    stage('Front-end') {
      agent {
        docker { image 'node:16-alpine' }
      }
      steps {
        sh 'node --version'
      }
    }
  }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------
# This is a basic Jenkins declarative pipeline that runs two stages using Docker containers for the agents. Each stage uses a different Docker image to perform specific tasks.

# Hereâ€™s a breakdown of the pipeline:
pipeline: The entry point of the Jenkins declarative pipeline.
agent none: Specifies that there is no global agent. Each stage defines its own agent.
stages: A block that contains all the stages of the pipeline.

Stages
Back-end Stage:

agent: Specifies a Docker agent with the maven:3.8.1-adoptopenjdk-11 image.
steps: Contains the commands to be executed in the sh 'mvn --version' step. This command checks the Maven version, which ensures that Maven is correctly set up in the Docker container.
Front-end Stage:

agent: Specifies a Docker agent with the node:16-alpine image.
steps: Contains the commands to be executed in the sh 'node --version' step. This command checks the Node.js version, which ensures that Node.js is correctly set up in the Docker container.
